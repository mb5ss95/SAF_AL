BFS 특징
- 완전 탐색, 연결된 모든 node를 돌린다
- 큐를 사용한다
- 최단거리(정답이자 오답)
- 최대한 적은 노드를 들려서 가는 방법임
- 먼저 찾은 점을 이용해 먼저 탐색

최단 거리를 구할수있는 dijkstra floyd warshal A*
알고리즘
dijkstra 


DFS, BFS의 공통점 
완전 탐색(갈수 있는대로 감) 모든 점 확인
-> 모든 점을 1번씩만 들리면 : 아무거나 사용해도됨

차이점
DFS : 길든 짧든 일단 모든 경로를 다 만들어야 하는 상황
BFS : 제일 적은 node를 들려가는 방법

DFS
경로의 특징을 저장해둬야 하는 문제
예를 들면 각 정점에 숫자가 적혀있고 a부터 b까지 가는 경로를 구하는데 
경로에 같은 숫자가 있으면 안 된다는 문제 등, 
각각의 경로마다 특징을 저장해둬야 할 때는 DFS를 사용합니다. (BFS는 경로의 특징을 가지지 못합니다)

BFS
최단거리 구해야 하는 문제
미로 찾기 등 최단거리를 구해야 할 경우, BFS가 유리합니다.
왜냐하면 깊이 우선 탐색으로 경로를 검색할 경우 처음으로 발견되는 해답이 최단거리가 아닐 수 있지만,
너비 우선 탐색으로 현재 노드에서 가까운 곳부터 찾기 때문에경로를 탐색 시 먼저 찾아지는 해답이 곧 최단거리기 때문입니다.

bfs
-모든 경로 탐색이 어렵다
-모든 노드 탐색이 쉽다
최소 이동횟수 구할때 좋다

dfs
- 모든 경로 탐색이 쉽다
- 모든 노드 탐색이 쉽다